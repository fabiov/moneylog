#!/usr/bin/env bash
exit 0
PHP_STAGED_FILES=$(git diff --name-only --cached --diff-filter=ACMR -- '*.php' | sed 's| |\\ |g')
CS_ERROR=0

TO_FIX=()

if [[ -n "$PHP_STAGED_FILES" ]]; then


    # check if php-cs-fix is installed
    if ! command -v php-cs-fixer &> /dev/null
    then
        echo -e "\e[41mphp-cs-fixer not be found, please consider to install it to perform fixing code style\e[m"
        exit 0
    fi

#    docker-compose exec php php-cs-fixer fix --dry-run --show-progress=dots
    for staged in $PHP_STAGED_FILES; do
        php-cs-fixer fix --dry-run -q "$staged"
        STATUS=$?

        if [[ "$STATUS" -ne 0 ]]; then
            TO_FIX+=("$staged")
            CS_ERROR=1
        fi
    done

    if [[ "$CS_ERROR" -eq 0 ]]; then
        echo ""
        echo -e "\e[42mCode style is OK\e[m"
    else
        while true; do
            echo -e "\e[41mInvalid code style\e[m"
            read -p $'\e[31mDo you really want to commit ignoring code style warnings? y/n/f[Fix] \e[0m: ' yn < /dev/tty
            case $yn in
                [Yy]* )
                    echo "";
                    echo "Please consider fixing code style";
                    break
                    ;;
                [Nn]* )
                    echo "Run php-cs-fixer to fix";
                    exit 1
                    ;;
                [Ff]* )
                    for staged in "${TO_FIX[@]}"; do
                        php-cs-fixer fix -q "$staged"
                        git add "$staged" && echo "CS-FIXED $staged"
                    done
                    break
                    ;;
                * )
                    echo "Please answer y, n or f."
                    ;;
            esac
        done
    fi

    vendor/bin/phpstan analyze
    STATUS=$?

    if [[ "$STATUS" -eq 0 ]]; then
        echo -e "\e[42mPHP Static Analysis is OK\e[m"
    else
        while true; do
            read -p $'\e[31mDo you really want to commit ignoring Static Analysis errors? y/n \e[0m: ' yn < /dev/tty
            case $yn in
                #[Yy]* ) exit 0; break;; # Si commit
                [Yy]* ) echo ""; echo "Please consider fixing static analysis errors"; break;;
                [Nn]* ) exit 1;; # No commit
                * ) echo "Please answer y or n.";;
            esac
        done
    fi

    docker-compose exec web vendor/bin/phpunit --coverage-text=coverage.txt < /dev/tty
    STATUS=$?

    if [[ "$STATUS" -eq 0 ]]; then
        echo -e "\e[42mPHP Unit Tests Suite is OK\e[m"
        git add coverage.txt
    else
        while true; do
            read -p $'\e[31mDo you really want to commit ignoring Tests errors? y/n \e[0m: ' yn < /dev/tty
            case $yn in
                #[Yy]* ) exit 0; break;; # Si commit
                [Yy]* ) echo ""; echo "Please consider fixing tests errors"; break;;
                [Nn]* ) exit 1;; # No commit
                * ) echo "Please answer y or n.";;
            esac
        done
    fi

else
    echo -e "\e[42mNo PHP staged files.\e[m"
    exit 0
fi

